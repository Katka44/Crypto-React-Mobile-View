{"version":3,"sources":["assets/loader.svg","Components/FadedLine/index.js","Components/Title/index.js","Components/Layouts/ButtonsLayout/index.js","Components/Layouts/FadedLinesLayout/index.js","Components/Button/index.js","Components/Input/index.js","Containers/Buttons/index.js","Components/Message/index.js","Components/Layouts/ColorCodesLayout/index.js","Components/ColorCode/index.js","Containers/ColorCodes/index.js","Components/Loader/index.js","handlers.js","Components/Tooltip/index.js","Components/Layouts/CardLayout/index.js","Components/CardContent/index.js","Containers/Card/index.js","Components/TableRow/index.js","Components/Tickers/index.js","Containers/Main/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FadedLine","react_default","a","createElement","className","Title","props","size","text","title","concat","Components_FadedLine","ButtonsLayout","render","FadedLinesLayout","Button","data","handleClick","category","onClick","type","defaultProps","Input","placeholder","name","value","handleChange","onChange","Buttons","filter","handleTextChange","handleSort","isListView","toggleListView","Layouts_ButtonsLayout","Fragment","map","item","Layouts_FadedLinesLayout","key","Components_Button","Components_Input","Message","message","ColorCodesLayout","ColorCode","ColorCodes","classNameCardView","classNameListView","Layouts_ColorCodesLayout","Components_ColorCode","Loader","src","loader","alt","handleFilterFunc","string","element","toLowerCase","includes","symbol","sortName","order","Object","toConsumableArray","sort","b","toUpperCase","sortValue","displayCategory","left","divSize","coordX","gap","pointer","div","window","innerWidth","isEnoughSpace","Number","addPlus","number","getPerformanceClass","performance","Tooltip","hoveredObject","coordY","child","price_usd","rank","percent_change_1h","percent_change_24h","percent_change_7d","react_sizeme","_ref","style","top","width","CardLayout","marketCap","setHover","resetHover","handleHover","market_cap_usd","onMouseEnter","onMouseMove","onMouseLeave","keys","length","constructor","Components_Tooltip","CardContent","Card","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateCoords","newX","newY","setState","object","e","pageX","pageY","state","_this$state","Layouts_CardLayout","Components_CardContent","Component","TableRow","isHeader","price","change1h","change24h","change7d","priceChange","Tickers","manipulatedData","sortBy","windowWidth","topOffset","lib","objectSpread","Components_TableRow","currency","id","renderTable","Containers_Card","Main","componentDidMount","setInterval","fetchData","isSmallerThan","limit","sortedArray","handleFilter","filteredData","field","target","newValue","defineProperty","prevState","manipulateOnRefetch","axios","get","then","response","result","catch","err","Error","_this$state2","Components_Title","Containers_Buttons","Components_Message","Containers_ColorCodes","Components_Tickers","Components_Loader","App","Containers_Main","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.15230730.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.4d106d48.svg\";","import React from 'react';\n\nconst FadedLine = () => <hr className=\"Faded-line\" />;\n\nexport default FadedLine;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FadedLine from '../FadedLine';\n\nconst Title = (props) => {\n  const { size, text } = props;\n  const title = size === 'h1' ? <h1 className={`Title__${size}`}>{text}</h1> : <h2 className={`Title__${size}`}>{text}</h2>;\n\n  return <div>\n      {size === 'h1' || size === 'h2' ? title : <h3 className={`Title__${size}`}>{text}</h3> }\n      {size === 'h1' ? <FadedLine size=\"L\" /> : null}\n    </div>;\n};\n\nTitle.propTypes = {\n  size: PropTypes.oneOf(['h1', 'h2', 'h3']).isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ButtonsLayout = (props) => {\n  const { render } = props;\n\n  return (\n    <div className=\"ButtonsLayout\">\n      {render()}\n    </div>\n  );\n};\n\nButtonsLayout.propTypes = {\n  render: PropTypes.func.isRequired,\n};\n\nexport default ButtonsLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FadedLine from '../../FadedLine';\n\nconst FadedLinesLayout = (props) => {\n  const { render } = props;\n  return (\n    <div className=\"Faded-lines-layout\">\n      <FadedLine />\n      {render()}\n      <FadedLine />\n    </div>\n  );\n};\n\nFadedLinesLayout.propTypes = {\n  render: PropTypes.func.isRequired,\n};\n\nexport default FadedLinesLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = (props) => {\n  const {\n    data,\n    text,\n    handleClick,\n    category,\n  } = props;\n\n  return (\n    <button\n      className=\"Button\"\n      onClick={() => handleClick(data, category)}\n      type=\"button\">{text}</button>\n  );\n};\n\nButton.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})),\n  text: PropTypes.string,\n  handleClick: PropTypes.func.isRequired,\n  category: PropTypes.string,\n};\n\nButton.defaultProps = {\n  data: null,\n  text: null,\n  category: null,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = (props) => {\n  const {\n    placeholder,\n    name,\n    value,\n    handleChange,\n  } = props;\n\n  return (\n    <input\n      className=\"Input\"\n      type=\"text\"\n      name={name}\n      value={value}\n      onChange={handleChange}\n      placeholder={placeholder}/>\n  );\n};\n\nInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonsLayout from '../../Components/Layouts/ButtonsLayout';\nimport FadedLinesLayout from '../../Components/Layouts/FadedLinesLayout';\nimport Button from '../../Components/Button';\nimport Input from '../../Components/Input';\n\nconst Buttons = (props) => {\n  const {\n    data,\n    filter,\n    handleTextChange,\n    handleSort,\n    isListView,\n    toggleListView,\n  } = props;\n\n  const render = [\n    {\n      text: 'Sort By Name',\n      category: 'name',\n    },\n    {\n      text: 'Sort By Price',\n      category: 'price_usd',\n    },\n    {\n      text: 'Sort By Rank',\n      category: 'rank',\n    },\n    {\n      text: 'Sort By Performance',\n      category: 'percent_change_24h',\n    },\n  ];\n\n  return (\n    <ButtonsLayout\n      render={() => <React.Fragment>\n        {render.map(item => <FadedLinesLayout\n          key={item.category}\n          render={() => <Button\n            data={data}\n            text={item.text}\n            handleClick={handleSort}\n            category={item.category}/>}\n          />)}\n        <FadedLinesLayout\n          render={() => <Input\n            placeholder=\"Filter by name or ticker\"\n            name=\"filter\"\n            value={filter}\n            handleChange={handleTextChange}/>}/>\n        <FadedLinesLayout\n          render={() => <Button\n            text={isListView ? 'Switch to Card View' : 'Switch to List View'}\n            handleClick={toggleListView}/>}/>\n      </React.Fragment>}/>\n  );\n};\n\nButtons.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})),\n  filter: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  isListView: PropTypes.bool.isRequired,\n  toggleListView: PropTypes.func.isRequired,\n};\n\nButtons.defaultProps = {\n  data: null,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Message = (props) => {\n  const { message } = props;\n  return (\n    <div className=\"Message\">\n      <p className=\"Message__text\">{message}</p>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ColorCodesLayout = (props) => {\n  const { render } = props;\n  return <div className=\"ColorCodesLayout\">\n    {render()}\n  </div>;\n};\n\nColorCodesLayout.propTypes = {\n  render: PropTypes.func.isRequired,\n};\n\nexport default ColorCodesLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ColorCode = (props) => {\n  const { text, className, isListView } = props;\n  return <li\n    className={`Color-code ${className}`}\n    title={isListView ? 'Color indicates price change.' : 'Color indicates 24h price change.'}>{text}</li>;\n};\n\nColorCode.propTypes = {\n  text: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  isListView: PropTypes.bool.isRequired,\n};\n\nexport default ColorCode;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ColorCodesLayout from '../../Components/Layouts/ColorCodesLayout';\nimport ColorCode from '../../Components/ColorCode';\n\nconst ColorCodes = (props) => {\n  const { isListView } = props;\n  const render = [\n    {\n      text: '-5%',\n      classNameCardView: 'minus-five-card',\n      classNameListView: 'minus-five-list',\n    },\n    {\n      text: '-3%',\n      classNameCardView: 'minus-three-card',\n      classNameListView: 'minus-three-list',\n\n    },\n    {\n      text: '-1%',\n      classNameCardView: 'minus-one-card',\n      classNameListView: 'minus-one-list',\n    },\n    {\n      text: '0%',\n      classNameCardView: 'zero-card',\n      classNameListView: 'zero-list',\n    },\n    {\n      text: '1%',\n      classNameCardView: 'plus-one-card',\n      classNameListView: 'plus-one-list',\n    },\n    {\n      text: '3%',\n      classNameCardView: 'plus-three-card',\n      classNameListView: 'plus-three-list',\n    },\n    {\n      text: '5%',\n      classNameCardView: 'plus-five-card',\n      classNameListView: 'plus-five-list',\n    },\n  ];\n\n  return <ColorCodesLayout\n    render={() => <ul>\n      {render.map(item => <ColorCode\n        key={item.text}\n        text={item.text}\n        className={isListView ? item.classNameListView : item.classNameCardView}\n        isListView={isListView}/>)}\n    </ul>}/>;\n};\n\nColorCodes.propTypes = {\n  isListView: PropTypes.bool.isRequired,\n};\n\nexport default ColorCodes;\n","import React from 'react';\nimport loader from '../../assets/loader.svg';\n\nconst Loader = () => <img src={loader} alt=\"loader\"/>;\n\nexport default Loader;\n","export const handleFilterFunc = (data, string) => {\n  const filteredData = data.filter(\n    element => (element.name.toLowerCase().includes(string.toLowerCase())\n      || element.symbol.toLowerCase().includes(string.toLowerCase())),\n  );\n  return filteredData;\n};\n\nexport const sortName = (data, order) => {\n  const sortedArray = order === 'ascending'\n    ? [...data].sort((a, b) => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n      return (nameA > nameB) ? 1 : -1;\n    })\n    : [...data].sort((a, b) => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n      return (nameA > nameB) ? -1 : 1;\n    });\n  return sortedArray;\n};\n\nexport const sortValue = (data, order, category) => {\n  const sortedArray = order === 'ascending' ? [...data].sort((a, b) => a[category] - b[category]) : [...data].sort((a, b) => b[category] - a[category]);\n  return sortedArray;\n};\n\nexport const displayCategory = (category) => {\n  switch (category) {\n    case 'name':\n    case 'rank':\n      return category;\n    case 'price_usd':\n      return 'price';\n    case 'percent_change_24h':\n      return 'performance';\n    default:\n      return null;\n  }\n};\n\nexport const isEnoughSpace = (coordX, gap, div) => {\n  const html = window.innerWidth;\n  const scrollbar = 16;\n  const spaceNeeded = (gap + div);\n  if ((coordX + spaceNeeded) <= html - scrollbar) {\n    return true;\n  }\n  return false;\n};\n\nexport const left = (divSize, coordX, gap) => {\n  const pointer = coordX;\n  const div = divSize;\n  if (isEnoughSpace(coordX, gap, div)) {\n    return Number(pointer + gap);\n  }\n  return Number(pointer - gap - divSize) || 120;\n};\n\nexport const addPlus = (number) => {\n  if (Number(number) > 0) {\n    return `+${number}`;\n  }\n  return number;\n};\n\nexport const getPerformanceClass = (performance) => {\n  if (performance <= -5) {\n    return 'minus-five';\n  }\n  if (performance <= -3) {\n    return 'minus-three';\n  }\n  if (performance <= -1) {\n    return 'minus-one';\n  }\n  if (performance <= 1) {\n    return 'zero';\n  }\n  if (performance <= 3) {\n    return 'plus-one';\n  }\n  if (performance <= 5) {\n    return 'plus-three';\n  }\n  return 'plus-five';\n};\n\nexport const addCardToString = string => `${string}-card`;\n\nexport const addListToString = string => `${string}-list`;\n\n\nexport const getSizeClass = (marketCap) => {\n  if (marketCap <= 1000) {\n    return 'size-zero';\n  }\n  if (marketCap <= 10000) {\n    return 'size-thousand';\n  }\n  if (marketCap <= 100000) {\n    return 'size-ten-thousand';\n  }\n  if (marketCap <= 1000000) {\n    return 'size-hundred-thousand';\n  }\n  if (marketCap <= 10000000) {\n    return 'size-million';\n  }\n  if (marketCap <= 100000000) {\n    return 'size-ten-million';\n  }\n  if (marketCap <= 1000000000) {\n    return 'size-hundred-million';\n  }\n  if (marketCap <= 10000000000) {\n    return 'size-billion';\n  }\n  if (marketCap <= 100000000000) {\n    return 'size-ten-billion';\n  }\n  return 'size-hundred-billion';\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SizeMe } from 'react-sizeme';\nimport { left } from '../../handlers';\n\nconst Tooltip = (props) => {\n  const tooltipGap = 100;\n  const { hoveredObject, coordX, coordY } = props;\n\n  const render = [\n    {\n      className: 'Tooltip__content',\n      child: `${hoveredObject.symbol}`,\n    },\n    {\n      className: 'Tooltip__content Tooltip__name',\n      child: `${hoveredObject.name}`,\n    },\n    {\n      className: 'Tooltip__content Tooltip__price',\n      child: `$${hoveredObject.price_usd}`,\n    },\n    {\n      className: 'Tooltip__content',\n      child: `Rank: ${hoveredObject.rank}`,\n    },\n    {\n      className: 'Tooltip__content',\n      child: `1h change: ${hoveredObject.percent_change_1h}%`,\n    },\n    {\n      className: 'Tooltip__content',\n      child: `24h change: ${hoveredObject.percent_change_24h}%`,\n    },\n    {\n      className: 'Tooltip__content',\n      child: `7d change: ${hoveredObject.percent_change_7d}%`,\n    },\n  ];\n  return (\n    <SizeMe>\n      {({ size }) => <div\n        style={{ top: coordY, left: left(size.width, coordX, tooltipGap) }}\n        className=\"Tooltip animate\">\n        {render.map(element => <p\n          key={`${element.className}${element.child}`}\n          className={element.className}>{element.child}</p>)}\n      </div>}\n    </SizeMe>\n  );\n};\n\nTooltip.propTypes = {\n  hoveredObject: PropTypes.shape({}),\n  coordX: PropTypes.number,\n  coordY: PropTypes.number,\n};\n\nTooltip.defaultProps = {\n  hoveredObject: null,\n  coordX: null,\n  coordY: null,\n};\n\nexport default Tooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../../Tooltip';\nimport { getPerformanceClass, addCardToString, getSizeClass } from '../../../handlers';\n\nconst CardLayout = (props) => {\n  const {\n    render,\n    data,\n    coordX,\n    coordY,\n    hoveredObject,\n    setHover,\n    resetHover,\n    handleHover,\n  } = props;\n\n  // eslint-disable-next-line camelcase\n  const { percent_change_24h, market_cap_usd } = data;\n  const size = getSizeClass(market_cap_usd);\n  const performance = addCardToString(getPerformanceClass(percent_change_24h));\n\n  return (\n    <div\n      className={`Card-layout ${performance} ${size}`}\n      onMouseEnter={() => setHover(data)}\n      onMouseMove={handleHover}\n      onMouseLeave={resetHover} >\n      {render({\n        data,\n        size,\n      })}\n      {Object.keys(hoveredObject).length > 0 && hoveredObject.constructor === Object\n        ? <Tooltip\n            hoveredObject={hoveredObject}\n            coordX={coordX}\n            coordY={coordY} />\n        : null}\n    </div>\n  );\n};\n\nCardLayout.propTypes = {\n  render: PropTypes.func.isRequired,\n  data: PropTypes.shape({}).isRequired,\n  coordX: PropTypes.number.isRequired,\n  coordY: PropTypes.number.isRequired,\n  hoveredObject: PropTypes.shape({}).isRequired,\n  setHover: PropTypes.func.isRequired,\n  resetHover: PropTypes.func.isRequired,\n  handleHover: PropTypes.func.isRequired,\n};\n\nexport default CardLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addPlus } from '../../handlers';\n\nconst CardContent = (props) => {\n  const { data, size } = props;\n\n  // eslint-disable-next-line camelcase\n  const { symbol, percent_change_24h } = data;\n\n  const sizesWithText = () => ['size-hundred-billion', 'size-ten-billion', 'size-billion', 'size-hundred-million', 'size-ten-million'];\n\n  return (\n    <li>\n      {sizesWithText().includes(size)\n        ? <p\n            className={`Card-content Card-content--${size}`}>\n            {symbol} {addPlus(percent_change_24h)}%\n          </p>\n        : null}\n    </li>\n  );\n};\n\nCardContent.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n  size: PropTypes.string.isRequired,\n};\n\nexport default CardContent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CardLayout from '../../Components/Layouts/CardLayout';\nimport CardContent from '../../Components/CardContent';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hoveredObject: {},\n      coordX: 0,\n      coordY: 0,\n    };\n  }\n\n  updateCoords = (newX, newY) => {\n    this.setState({ coordX: newX, coordY: newY });\n  }\n\n  setHover = (object) => {\n    this.setState({ hoveredObject: object });\n  }\n\n  resetHover = () => {\n    this.setState({ hoveredObject: {} });\n  }\n\n  handleHover = (e) => {\n    this.updateCoords(e.pageX, e.pageY);\n  }\n\n  render() {\n    const { data } = this.props;\n    const { hoveredObject, coordX, coordY } = this.state;\n\n    return (\n      <CardLayout\n        render={props => <CardContent {...props} />}\n        data={data}\n        hoveredObject={hoveredObject}\n        coordX={coordX}\n        coordY={coordY}\n        setHover={this.setHover}\n        resetHover={this.resetHover}\n        handleHover={this.handleHover}/>\n    );\n  }\n}\n\nCard.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getPerformanceClass, addListToString, addPlus } from '../../handlers';\n\nconst TableRow = (props) => {\n  const {\n    isHeader, rank, symbol, name, price, change1h, change24h, change7d,\n  } = props;\n\n  const performance = priceChange => addListToString(getPerformanceClass(priceChange));\n\n  return <div className=\"TableRow\">\n    <p className=\"TableRow-content TableRow-rank\">{rank}</p>\n    <p className=\"TableRow-content\">{symbol}</p>\n    <p className=\"TableRow-content TableRow-name\">{name}</p>\n    <p className=\"TableRow-content\">{price}</p>\n    <p className={isHeader\n      ? 'TableRow-content TableRow-change1h'\n      : `TableRow-content TableRow-change1h ${performance(change1h)}`}>\n      {isHeader ? change1h : `${addPlus(change1h)}%`}\n    </p>\n    <p className={isHeader\n      ? 'TableRow-content'\n      : `TableRow-content ${performance(change24h)}`}>\n      {isHeader ? change24h : `${addPlus(change24h)}%`}\n    </p>\n    <p className={isHeader\n      ? 'TableRow-content TableRow-change7d'\n      : `TableRow-content TableRow-change7d ${performance(change7d)}`}>\n      {isHeader ? change7d : `${addPlus(change7d)}%`}\n    </p>\n  </div>;\n};\n\nTableRow.propTypes = {\n  isHeader: PropTypes.bool,\n  rank: PropTypes.string.isRequired,\n  symbol: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  change1h: PropTypes.string,\n  change24h: PropTypes.string,\n  change7d: PropTypes.string,\n};\n\nTableRow.defaultProps = {\n  isHeader: false,\n  change1h: null,\n  change24h: null,\n  change7d: null,\n};\n\nexport default TableRow;\n","import React from 'react';\nimport { StickyContainer, Sticky } from 'react-sticky';\nimport PropTypes from 'prop-types';\nimport Card from '../../Containers/Card';\nimport TableRow from '../TableRow';\n\nconst Tickers = (props) => {\n  const renderCards = (data) => {\n    const render = data.map(currency => <Card\n      data={currency}\n      key={currency.id}/>);\n    return render;\n  };\n\n  const renderTable = (data) => {\n    const windowWidth = window.innerWidth;\n    const offset = windowWidth > 600 ? 150 : 200;\n    const topOffset = windowWidth > 800 ? 100 : offset;\n\n    const render = <div className=\"Tickers-table\">\n    <StickyContainer>\n      <Sticky topOffset={-topOffset - 50}>\n        {({ style }) => (\n          <div style={{\n            ...style,\n            top: `${topOffset}px`,\n          }}>\n            <TableRow\n              isHeader\n              rank=\"Rank\"\n              symbol=\"Symbol\"\n              name=\"Name\"\n              price=\"Price\"\n              change1h=\"1hr change\"\n              change24h=\"24hr change\"\n              change7d=\"7d change\"/>\n          </div>)}\n      </Sticky>\n      {data.map(currency => <TableRow\n        key={currency.id}\n        rank={currency.rank}\n        symbol={currency.symbol}\n        name={currency.name}\n        price={`$${currency.price_usd}`}\n        change1h={currency.percent_change_1h}\n        change24h={currency.percent_change_24h}\n        change7d={currency.percent_change_7d}/>)}\n      </StickyContainer>\n    </div>;\n    return render;\n  };\n\n  const { manipulatedData, sortBy, isListView } = props;\n  return (\n    <div>\n      {isListView\n        ? renderTable(manipulatedData)\n        : <ul className={sortBy ? 'Tickers-grid Tickers-grid--sorted' : 'Tickers-grid'}>{renderCards(manipulatedData)}</ul>}\n    </div>\n  );\n};\n\nTickers.propTypes = {\n  manipulatedData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  sortBy: PropTypes.shape({}),\n  isListView: PropTypes.bool.isRequired,\n};\n\nTickers.defaultProps = {\n  sortBy: null,\n};\n\nexport default Tickers;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { StickyContainer, Sticky } from 'react-sticky';\nimport Title from '../../Components/Title';\nimport Buttons from '../Buttons';\nimport Message from '../../Components/Message';\nimport ColorCodes from '../ColorCodes';\nimport Loader from '../../Components/Loader';\nimport Tickers from '../../Components/Tickers';\nimport {\n  handleFilterFunc, sortName, sortValue, displayCategory,\n} from '../../handlers';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      manipulatedData: [],\n      filter: '',\n      sortBy: null,\n      message: '',\n      isListView: true,\n    };\n  }\n\n  componentDidMount = () => {\n    setInterval(() => {\n      this.fetchData();\n    }, 5000);\n  }\n\n  isSmallerThan = (limit) => {\n    const width = window.innerWidth;\n    return width < limit;\n  }\n\n  handleSort = (data, category) => {\n    const { sortBy } = this.state;\n    let order;\n    if (sortBy === null || (sortBy.title !== category)) {\n      order = 'ascending';\n    }\n    if (sortBy && sortBy.title === category && sortBy.order === 'ascending') {\n      order = 'descending';\n    }\n    if (sortBy && sortBy.title === category && sortBy.order === 'descending') {\n      order = null;\n    }\n    if (order) {\n      const sortedArray = category === 'name' ? sortName(data, order) : sortValue(data, order, category);\n      this.setState({\n        sortBy: { title: category, order },\n        filter: '',\n        manipulatedData: sortedArray,\n        message: `Data sorted by ${displayCategory(category)} in ${order} order.`,\n      });\n    } else {\n      const sortedArray = sortValue(data, 'ascending', 'rank');\n      this.setState({\n        sortBy: null,\n        manipulatedData: sortedArray,\n        message: '',\n      });\n    }\n  };\n\n  handleFilter = (data, string) => {\n    const { filter } = this.state;\n    const filteredData = handleFilterFunc(data, string);\n    const message = filter ? 'Data filtered.' : '';\n    this.setState({ message, manipulatedData: filteredData, sortBy: null });\n  };\n\n  handleTextChange = (e) => {\n    const { data } = this.state;\n    const field = e.target.name;\n    const newValue = e.target.value;\n    this.setState({ [field]: newValue }, () => {\n      this.handleFilter(data, newValue);\n    });\n  };\n\n  toggleListView = () => {\n    this.setState(prevState => ({\n      isListView: !prevState.isListView,\n    }));\n  };\n\n  manipulateOnRefetch = (data) => {\n    const { filter, sortBy } = this.state;\n    if (filter) {\n      return handleFilterFunc(data, filter);\n    }\n    if (sortBy && sortBy.title === 'name') {\n      return sortName(data, sortBy.order);\n    }\n    if (sortBy && sortBy.title !== 'name') {\n      return sortValue(data, sortBy.order, sortBy.title);\n    }\n    return data;\n  };\n\n  fetchData = () => {\n    axios.get('https://api.coinmarketcap.com/v1/ticker/?limit=2500')\n      .then((response) => {\n        const result = response.data;\n        this.setState({ data: result, manipulatedData: this.manipulateOnRefetch(result) });\n      })\n      .catch((err) => { throw new Error(err); });\n  }\n\n  render = () => {\n    const {\n      data,\n      manipulatedData,\n      message,\n      filter,\n      sortBy,\n      isListView,\n    } = this.state;\n\n    return (\n      <StickyContainer>\n        <Title\n          size=\"h3\"\n          text={data.length ? `There are ${data.length} coins on the market` : ''} />\n        <Sticky>\n          {({ style }) => (\n            <div style={style}>\n              <Buttons\n              data={data}\n              filter={filter}\n              handleTextChange={this.handleTextChange}\n              handleSort = {this.handleSort}\n              isListView={isListView}\n              toggleListView={this.toggleListView}/>\n              <Message message={message}/>\n            </div>)}\n        </Sticky>\n        <ColorCodes isListView={isListView}/>\n          {!data.length ? <Loader /> : <Tickers\n            manipulatedData = {manipulatedData}\n            sortBy={sortBy}\n            isListView={isListView}/>}\n      </StickyContainer>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport Title from './Components/Title';\nimport Main from './Containers/Main';\nimport './styles/main.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Title\n      size=\"h1\"\n      text=\"Crypto Dashboard\" />\n    <Main />\n  </div>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}